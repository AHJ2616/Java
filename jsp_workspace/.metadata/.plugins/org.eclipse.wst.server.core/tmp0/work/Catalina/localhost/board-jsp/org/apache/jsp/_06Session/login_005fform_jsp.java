/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-07-26 08:37:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._06Session;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>login_form.jsp : 로그인 창</title>\r\n");
      out.write("<!-- 성공시 세션에 저장 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Common/Link.jsp", out, false);
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<h2>로그인 페이지</h2>\r\n");
      out.write("	<span style=\"color: red; font-size: 1.2em;\">\r\n");
      out.write("	");
      out.print( request.getAttribute("LoginErrMsg")==null ? "" : request.getAttribute("LoginErrMsg") );
      out.write("\r\n");
      out.write("	<!-- 조건 ; request 영역에 \"loginErrMsg\"가 있나 확인 ? true일때 : false일때 -->\r\n");
      out.write("	</span><!-- 한줄짜리 글자창 출력 -->\r\n");

if(session.getAttribute("id")==null){//로그인 상태
	//로그아웃 상태

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function validateForm(form){\r\n");
      out.write("	if(form.id.value==\"\"){ /* form의 name=\"id\"의 value가 없으면 alert호출 */\r\n");
      out.write("		alert(\"아이디를 입력하세요.\")\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(form.pw.value==\"\"){ /* form의 name=\"pw\"의 value가 없으면 alert호출 */\r\n");
      out.write("		alert(\"패스워드를 입력하세요.\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"login_menu\">\r\n");
      out.write("	<form action= \"login_process.jsp\" method= \"post\" name= \"login_form\" \r\n");
      out.write("	onsubmit=\"return validateForm(this);\"> <!-- submit에서 action으로 보내기전에 먼저 실행하는 것 (this)안에 form값이 들어간다. -->\r\n");
      out.write("	<!-- onsubmit의 값이 true가 나와야만 action으로 form이 보내진다 -->\r\n");
      out.write("		아이디 : <input type=\"text\" name=\"id\" required/><br>\r\n");
      out.write("		패스워드 : <input type=\"password\" name=\"pw\" required /><br><br>\r\n");
      out.write("		<input type=\"submit\" value=\"로그인\"	/>&nbsp;&nbsp;&nbsp;\r\n");
      out.write("		<button type= \"button\" onclick= \"location.href='Register_form.jsp'\">회원가입</button>\r\n");
      out.write("	</form>	\r\n");
      out.write("</div>\r\n");

} else{

      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(session.getAttribute("name") );
      out.write(" 회원님, 로그인하셨습니다.\r\n");
      out.write("	<button type= \"button\" onclick= \"location.href='logout.jsp'\">로그아웃</button>\r\n");
}
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<footer>");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Common/Foot.jsp", out, false);
      out.write("</footer>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
